/// First nibble substitution table (high 4 bits)
pub const SBOX_FIRST_NIBBLE:[u64; 256] = [
    // 0     1    2      3     4    5     6     7      8    9     A      B    C     D     E     F
    0x6, 0x7, 0x7, 0x7, 0xf, 0x6, 0x6, 0xc, 0x3, 0x0, 0x6, 0x2, 0xf, 0xd, 0xa, 0x7,  // 0
    0xc, 0x8, 0xc, 0x7, 0xf, 0x5, 0x4, 0xf, 0xa, 0xd, 0xa, 0xa, 0x9, 0xa, 0x7, 0xc,  // 1
    0xb, 0xf, 0x9, 0x2, 0x3, 0x3, 0xf, 0xc, 0x3, 0xa, 0xe, 0xf, 0x7, 0xd, 0x3, 0x1,  // 2
    0x0, 0xc, 0x2, 0xc, 0x1, 0x9, 0x0, 0x9, 0x0, 0x1, 0x8, 0xe, 0xe, 0x2, 0xb, 0x7,  // 3
    0x0, 0x8, 0x2, 0x1, 0x1, 0x6, 0x5, 0xa, 0x5, 0x3, 0xd, 0xb, 0x2, 0xe, 0x2, 0x8,  // 4
    0x5, 0xd, 0x0, 0xe, 0x2, 0xf, 0xb, 0x5, 0x6, 0xc, 0xb, 0x3, 0x4, 0x4, 0x5, 0xc,  // 5
    0xd, 0xe, 0xa, 0xf, 0x4, 0x4, 0x3, 0x8, 0x4, 0xf, 0x0, 0x7, 0x5, 0x3, 0x9, 0xa,  // 6
    0x5, 0xa, 0x4, 0x8, 0x9, 0x9, 0x3, 0xf, 0xb, 0xb, 0xd, 0x2, 0x1, 0xf, 0xf, 0xd,  // 7
    0xc, 0x0, 0x1, 0xe, 0x5, 0x9, 0x4, 0x1, 0xc, 0xa, 0x7, 0x3, 0x6, 0x5, 0x1, 0x7,  // 8
    0x6, 0x8, 0x4, 0xd, 0x2, 0x2, 0x9, 0x8, 0x4, 0xe, 0xb, 0x1, 0xd, 0x5, 0x0, 0xd,  // 9
    0xe, 0x3, 0x3, 0x0, 0x4, 0x0, 0x2, 0x5, 0xc, 0xd, 0xa, 0x6, 0x9, 0x9, 0xe, 0x7,  // A
    0xe, 0xc, 0x3, 0x6, 0x8, 0xd, 0x4, 0xa, 0x6, 0x5, 0xf, 0xe, 0x6, 0x7, 0xa, 0x0,  // B
    0xb, 0x7, 0x2, 0x2, 0x1, 0xa, 0xb, 0xc, 0xe, 0xd, 0x7, 0x1, 0x4, 0xb, 0x8, 0x8,  // C
    0x7, 0x3, 0xb, 0x6, 0x4, 0x0, 0xf, 0x0, 0x6, 0x3, 0x5, 0xb, 0x8, 0xc, 0x1, 0x9,  // D
    0xe, 0xf, 0x9, 0x1, 0x6, 0xd, 0x8, 0x9, 0x9, 0x1, 0x8, 0xe, 0xc, 0x5, 0x2, 0xd,  // E
    0x8, 0xa, 0x8, 0x0, 0xb, 0xe, 0x4, 0x6, 0x4, 0x9, 0x2, 0x0, 0xb, 0x5, 0xb, 0x1]; // F

pub const SBOX_SECOND_NIBBLE:[u64; 256] = [
    // 0     1    2      3     4    5     6     7      8    9     A      B    C     D     E     F
    0x3, 0xc, 0x7, 0xb, 0x2, 0xb, 0xf, 0x5, 0x0, 0x1, 0x7, 0xb, 0xe, 0x7, 0xb, 0x6,  // 0
    0xa, 0x2, 0x9, 0xd, 0xa, 0x9, 0x7, 0x0, 0xd, 0x4, 0x2, 0xf, 0xc, 0x4, 0x2, 0x0,  // 1
    0x7, 0xd, 0x3, 0x6, 0x6, 0xf, 0x7, 0xc, 0x4, 0x5, 0x5, 0x1, 0x1, 0x8, 0x1, 0x5,  // 2
    0x4, 0x7, 0x3, 0x3, 0x8, 0x6, 0x5, 0xa, 0x7, 0x2, 0x0, 0x2, 0xb, 0x7, 0x2, 0x5,  // 3
    0x9, 0x3, 0xc, 0xa, 0xb, 0xe, 0xa, 0x0, 0x2, 0xb, 0x6, 0x3, 0x9, 0x3, 0xf, 0x4,  // 4
    0x3, 0x1, 0x0, 0xd, 0x0, 0xc, 0x1, 0xb, 0xa, 0xb, 0xe, 0x9, 0xa, 0xc, 0x8, 0xf,  // 5
    0x0, 0xf, 0xa, 0xb, 0x3, 0xd, 0x3, 0x5, 0x5, 0x9, 0x2, 0xf, 0x0, 0xc, 0xf, 0x8,  // 6
    0x1, 0x3, 0x0, 0xf, 0x2, 0xd, 0x8, 0x5, 0xc, 0x6, 0xa, 0x1, 0x0, 0xf, 0x3, 0x2,  // 7
    0xd, 0xc, 0x3, 0xc, 0xf, 0x7, 0x4, 0x7, 0x4, 0x7, 0xe, 0xd, 0x4, 0xd, 0x9, 0x3,  // 8
    0x0, 0x1, 0xf, 0xc, 0x2, 0xa, 0x0, 0x8, 0x6, 0xe, 0x8, 0x4, 0xe, 0xe, 0xb, 0xb,  // 9
    0x0, 0x2, 0xa, 0xa, 0x9, 0x6, 0x4, 0xc, 0x2, 0x3, 0xc, 0x2, 0x1, 0x5, 0x4, 0x9,  // A
    0x7, 0x8, 0x7, 0xd, 0xd, 0x5, 0xe, 0x9, 0xc, 0x6, 0x4, 0xa, 0x5, 0xa, 0xe, 0x8,  // B
    0xa, 0x8, 0x5, 0xe, 0xc, 0x6, 0x4, 0x6, 0x8, 0xd, 0x4, 0xf, 0xb, 0xd, 0xb, 0xa,  // C
    0x0, 0xe, 0x5, 0x6, 0x8, 0x3, 0x6, 0xe, 0x1, 0x5, 0x7, 0x9, 0x6, 0x1, 0xd, 0xe,  // D
    0x1, 0x8, 0x8, 0x1, 0x9, 0x9, 0xe, 0x4, 0xb, 0xe, 0x7, 0x9, 0xe, 0x5, 0x8, 0xf,  // E
    0xc, 0x1, 0x9, 0xd, 0xf, 0x6, 0x2, 0x8, 0x1, 0x9, 0xd, 0xf, 0x0, 0x4, 0xb, 0x6]; // F

